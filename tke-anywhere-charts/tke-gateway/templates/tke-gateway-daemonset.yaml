apiVersion: apps/v1
kind: DaemonSet
metadata:
  {{- if .Values.labels }}
  annotations:
{{ toYaml .Values.labels | indent 4 }}
  {{- end }}
  name: tke-gateway
  namespace: {{ .Release.Namespace | quote }}
  {{- if .Values.annotations }}
  annotations:
{{ toYaml .Values.annotations | indent 4 }}
  {{- end }}
spec:
  selector:
{{ toYaml .Values.selector | indent 4 }}
  template:
    metadata:
      annotations:
        checksum/configmap_config: {{ include (print $.Template.BasePath "/tke-gateway-configmap.yaml") . | sha256sum }}
      {{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations | indent 8 }}
      {{- end }}
      labels:
{{ toYaml .Values.podLabels | indent 8 }}
    spec:
      {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
      {{- end }}
      dnsPolicy: ClusterFirstWithHostNet
    {{- if .Values.tolerations }}
      tolerations: {{ toYaml .Values.tolerations | nindent 8 }}
    {{- end }}
      containers:
        - name: tke-gateway
          image: "{{ .Values.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: "{{ .Values.image.imagePullPolicy }}"
          command:
            - /bin/sh
            - -c 
            - >
              ln -s /app/certs/cert-manager/ca.crt /app/certs/ca.crt;
              ln -s /app/certs/cert-manager/ca.key /app/certs/ca.key;
              ln -s /app/certs/cert-manager/server.crt /app/certs/server.crt;
              ln -s /app/certs/cert-manager/server.key /app/certs/server.key;
              /app/bin/tke-gateway -C=/app/conf/tke-gateway.toml --oidc-client-secret=$(OIDC_CLIENT_SECRET);
          env:
            - name: OIDC_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: tke-auth-cluster-secrets
                  key: oidc-client-secret
                  optional: false
          volumeMounts:
            - name: cert-manager-certs
              mountPath: /app/certs/cert-manager
            - name: certs
              mountPath: /app/certs
            - name: tke-gateway-volume
              mountPath: /app/conf
          readinessProbe:
            httpGet:
              port: 80
              path: /healthz
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              port: 80
              path: /healthz
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 20
        {{- if .Values.resources }}
          resources: {{ toYaml .Values.resources | nindent 12 }}
        {{- end }}
      volumes:
        - name: tke-gateway-volume
          configMap:
            name: tke-gateway
        - name: certs
          emptyDir: {}
        - name: cert-manager-certs
          projected:
            sources:
            - secret:
                name: tke-ca
                items:
                - key: tls.crt
                  path: ca.crt
                - key: tls.key
                  path: ca.key
                optional: false
            - secret:
                name: tke-gateway-server-secret
                items:
                - key: tls.crt
                  path: server.crt
                - key: tls.key
                  path: server.key
                optional: false
