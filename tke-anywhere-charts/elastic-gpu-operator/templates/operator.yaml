apiVersion: apps/v1
kind: Deployment
metadata:
  name: elastic-gpu-operator
  namespace: kube-system
  labels:
    app.kubernetes.io/component: "gpu-operator"
    {{ $.Release.labels }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{ $.Release.matchLabels }}
      app.kubernetes.io/component: "gpu-operator"
      app: "gpu-operator"
  template:
    metadata:
      labels:
        {{ $.Release.matchLabels }}
        app.kubernetes.io/component: "gpu-operator"
        app: "gpu-operator"
      annotations:
        {{- toYaml .Values.operator.annotations | nindent 8 }}
    spec:
      {{- if .Values.operator.nodeSelector }}
      nodeSelector:
      
      {{- end }}
      serviceAccountName: gpu-operator
      {{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
      {{- range .Values.global.imagePullSecrets }}
        - name: {{ . }}
      {{- end }}
      {{- end }}
      {{- if .Values.operator.priorityClassName }}
      priorityClassName: {{ .Values.operator.priorityClassName }}
      {{- end }}
      containers:
      - name: gpu-operator
        image: {{ include "gpu-operator.fullimage" . }}
        imagePullPolicy: {{ .Values.global.imagePullPolicy }}
        command: ["gpu-operator"]
        args:
        - --leader-elect
        env:
        - name: WATCH_NAMESPACE
          value: ""
        - name: OPERATOR_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        volumeMounts:
          - name: host-os-release
            mountPath: "/host-etc/os-release"
            readOnly: true
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
      {{- with .Values.operator.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
      {{- end }}
        ports:
          - name: metrics
            containerPort: 8080
      volumes:
        - name: host-os-release
          hostPath:
            path: "/etc/os-release"
    {{- with .Values.operator.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.operator.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.operator.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
