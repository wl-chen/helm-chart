kind: ConfigMap
apiVersion: v1
metadata:
  name: tke-application-chart-hook-check
  namespace: {{ .Release.Namespace | quote }}
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": before-hook-creation
data:
  chart-hook-check.sh: |
    #!/bin/bash

    function check_deployment_install {
        check=true
        while [ $check = true ]
        do
        check=false
        if [ $check = false ] && [ $(kubectl get deployment $1 -n $2 2>&1 | grep Error | wc -l) -gt 0 ]; then
            check=true
            echo "waiting $1"
            sleep 1
        fi
        if [ $check = false ] && [ $(kubectl get deployment $1 -n $2 -o jsonpath="{.spec.replicas}") -ne $(kubectl get deployment $1 -n $2 -o jsonpath="{.status.readyReplicas}") ]; then
            check=true
            echo "waiting $1"
            sleep 1
        fi
        done
    }

    function check_deployment_upgrade {
        check=true
        while [ $check = true ]
        do
        check=false
        if [ $check = false ] && [ $(kubectl get deployment $1 -n $2 2>&1 | grep Error | wc -l) -gt 0 ]; then
            check=true
            echo "waiting $1"
            sleep 1
        fi
        if [ $check = false ] && [ $(kubectl get deployment $1 -n $2 -o jsonpath="{.spec.replicas}") -ne $(kubectl get deployment $1 -n $2 -o jsonpath="{.status.updatedReplicas}") ]; then
            check=true
            echo "waiting $1"
            sleep 1
        fi
        done
    }

    function check_daemonset_install {
        check=true
        while [ $check = true ]
        do
        check=false
        if [ $check = false ] && [ $(kubectl get daemonset $1 -n tke 2>&1 | grep Error | wc -l) -gt 0 ]; then
            check=true
            echo "waiting $1"
            sleep 1
        fi
        if [ $check = false ] && [ $(kubectl get daemonset $1 -n $2 -o jsonpath="{.status.desiredNumberScheduled}") -ne $(kubectl get daemonset $1 -n $2 -o jsonpath="{.status.numberReady}") ]; then
            check=true
            echo "waiting $1"
            sleep 1
        fi
        done
    }

    function check_components_cr {
        check=true
        while [ $check = true ]
        do
        check=false
        if [ $check = false ] && [ $(kubectl get $1 -A 2>&1 | grep "error" | wc -l) -gt 0 ]; then
            check=true
            echo "waiting $1"
            sleep 1
        fi
        done
    }

    CHECK_TYPE=$1
    echo $CHECK_TYPE
    case $CHECK_TYPE in
        application-pre-install-check)
            check_components_cr client
            check_daemonset_install tke-auth-api tke
            check_deployment_install tke-auth-controller tke
            ;;
        application-post-install-check)
            check_components_cr app
            check_deployment_install tke-application-api tke
            check_deployment_install tke-application-controller tke
            ;;
        application-post-upgrade-check)
            check_components_cr app
            check_deployment_upgrade tke-application-api tke
            check_deployment_upgrade tke-application-controller tke
            ;;
    esac
